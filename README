                                     __
                                    /\ \      __
    ___ ___      __      ____    ___\ \ \___ /\_\    ___      __       _ __   ____
  /' __` __`\  /'__`\   /',__\  /'___\ \  _ `\/\ \ /' _ `\  /'__`\    /\`'__\/',__\
  /\ \/\ \/\ \/\ \L\.\_/\__, `\/\ \__/\ \ \ \ \ \ \/\ \/\ \/\  __/  __\ \ \//\__, `\
  \ \_\ \_\ \_\ \__/.\_\/\____/\ \____\\ \_\ \_\ \_\ \_\ \_\ \____\/\_\\ \_\\/\____/
   \/_/\/_/\/_/\/__/\/_/\/___/  \/____/ \/_/\/_/\/_/\/_/\/_/\/____/\/_/ \/_/ \/___/


    maschine.rs is an open-source implementation of native instruments's USB HID
    protocol for the maschine mk2 devices (and also the maschine mikro mk1).

    This fork's current support is only for the maschine mk2, though support for other
    devices should be simple enough to add.

    also it only runs on linux. if you're on win/mac you probably don't need this.

    you'll need rustc and cargo to build/run. do this:

        $ cargo build --release
        $ cargo run --release /dev/hidraw0

    replace `/dev/hidraw0` with the path to your mikro mk2. you may need to tweak
    your udev permissions to have it accessible from your normal user account.

    There is also a shellscript to turn on all the lights. Do this:

        $ ./insert_colors

    while running, you'll have an ALSA MIDI out port which will send MIDI events
    (note on, note off, poly aftertouch) generated by playing the pads. also,
    the pads will light up while being played. it's all quite fancy.

    Please use oscdump or similar to identify the specific buttons available

    NOTE!!!: roller encoders are sent as weird binary in OSC, Maybe should fix...


